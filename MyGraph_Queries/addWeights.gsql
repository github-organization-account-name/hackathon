CREATE QUERY addWeights(STRING e_type, BOOL overwrite=True) FOR GRAPH MyGraph {
/* This query uses the haversine formula to calculate the distances 
between airports by using their latitude and longitude coordinates.
The calculated distances are measured in miles and are added as edge weights.
*/
	
	ListAccum<edge> @@dontChangeList;
	SumAccum<INT> @@numChanged;
	double pi = 3.14159265359; // pi
	double R = 3958.8; // earth's radius in miles
	
	//to_vertex_set("CNX-3931", "Airport");
	
	Start = {Airport.*};
	
	Heavy = SELECT t FROM Start:s-(e_type:e)->Airport:t
	    ACCUM 
	      IF overwrite == False AND e.miles != 0 THEN
	        @@dontChangeList += e
	      ELSE
	          double lat1 = s.latitude * pi / 180, // lat1 to radians
	          double lat2 = t.latitude * pi / 180, // lat2 to radians
	          double deltalat = (t.latitude - s.latitude) * pi / 180, // lat change in radians
	          double deltalong = (t.longitude - s.longitude) * pi / 180, // long change in radians
	          double a = sin(deltalat/2) * sin(deltalat/2)
	                     + cos(lat1) * cos(lat2)
	                     * sin(deltalong/2) * sin(deltalong/2),
	          //double atanp1 = sqrt(a), // temp
	          //double atanp2 = sqrt(1-a), // temp
	          double c = 2 * atan2(sqrt(a), sqrt(1-a)),
	          e.miles = ceil(R * c),
	          @@numChanged += 1
	      END;
	
  PRINT @@numChanged, @@dontChangeList;
}