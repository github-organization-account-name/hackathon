CREATE QUERY cc_by_country (BOOL display, INT outputLimit=500, INT maxHops, STRING country) FOR GRAPH MyGraph {
# Closeness Centrality main query

        TYPEDEF TUPLE<VERTEX Vertex_ID, STRING name, FLOAT lat, FLOAT lng, FLOAT score> vertexScore;
        HeapAccum<vertexScore>(outputLimit, score DESC) @@topScores;
        SumAccum<float> @score;
        SetAccum<EDGE> @@edgeSet;                   # list of all edges, if display is needed
  
        INT numVert;
        #INT maxHops = 10;      # measure distance for vertices up to 10 hops away
  
        Start = {Airport.*};
        IF country != "" THEN
	        Start = SELECT v
	          FROM Start:v
	          WHERE v.country == country;
	      END;

        #Total number of vertices considered in graph
        numVert = Start.size();

        # get closeness centrality for each vertex
        Start = SELECT s FROM Start:s
                POST-ACCUM s.@score = cc_subquery(s,numVert,maxHops),
                           @@topScores += vertexScore(s, s.name, s.latitude, s.longitude, cc_subquery(s,numVert,maxHops));

        PRINT @@topScores;
        IF display THEN
                PRINT Start[Start.@score];
                Start = SELECT s
                        FROM Start:s -(flight_to:e)-> :t
                        ACCUM @@edgeSet += e;
                PRINT @@edgeSet;
        END;
}